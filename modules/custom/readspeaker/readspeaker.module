<?php

/**
 * @file
 * Code for the ReadSpeaker.
 */

/**
 * Implements hook_menu().
 */
function readspeaker_menu() {
  $items = [];

  $items['admin/config/services/readspeaker'] = [
    'title' => 'ReadSpeaker',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['readspeaker_settings_form'],
    'access arguments' => ['administer readspeaker'],
    'type' => MENU_LOCAL_TASK,
    'file' => 'readspeaker.admin.inc',
  ];

  return $items;
}

/**
 * Implements hook_admin_paths().
 */
function readspeaker_admin_paths() {
  $paths = [
    'admin/config/services/readspeaker' => TRUE,
  ];

  return $paths;
}

/**
 * Implements hook_permission().
 */
function readspeaker_permission() {
  return [
    'administer readspeaker' => [
      'title' => t('Administer Read Speaker'),
      'description' => t('Administer ReadSpeaker settings.'),
    ],
  ];
}

/**
 * Implements hook_theme().
 */
function readspeaker_theme($existing, $type, $theme, $path) {
  return [
    'readspeaker' => [
      'variables' => [
        'customer_id' => NULL,
        'lang' => NULL,
        'url' => NULL,
        'title' => NULL,
        'button' => NULL,
      ],
      'template' => 'theme/readspeaker',
    ],
  ];
}

/**
 * Implements hook_block_info().
 */
function readspeaker_block_info() {
  $blocks = [];

  $blocks['readspeaker'] = [
    'info' => t('Read Speaker'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  ];

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function readspeaker_block_view($delta = '') {
  $block = [];

  if ($delta === 'readspeaker') {
    if ($player = readspeaker_build_player()) {
      $block['content'] = $player;
    }
    else {
      drupal_set_message(t('Read Speaker: Customer ID is not set or does not exist. Please check configuration.'), 'warning');
    }
  }

  return $block;
}

/**
 * Build Readspeaker player output.
 */
function readspeaker_build_player() {
  $player = [];
  if ($customerid = variable_get('readspeaker_customerid')) {
    $player = [
      '#markup' => theme('readspeaker', [
        'customer_id' => $customerid,
        'lang' => variable_get('readspeaker_language', 'nl_nl'),
        'url' => url(current_path(), ['absolute' => TRUE]),
        'title' => variable_get('readspeaker_title', t('Listen to this page using ReadSpeaker')),
        'button' => variable_get('readspeaker_button_text', t('Listen')),
      ]),
      '#attached' => [
        'js' => [
          '//cdn1.readspeaker.com/script/' . $customerid . '/webReader/webReader.js?pids=wr' => [
            'type' => 'external',
          ],
        ],
      ],
    ];
  }
  return $player;
}

/**
 * List of supported languages.
 */
function readspeaker_supported_languages() {
  $languages = [
    'nl_nl' => 'Nederlands',
    'fy_nl' => 'Fries',
    'en_uk' => 'Brits Engels',
    'de_de' => 'Duits',
    'fr_fr' => 'Frans',
    'es_es' => 'Spaans',
    'sv_se' => 'Zweeds',
    'no_nb' => 'Noors (BokmÃ¥l)',
    'fi_fi' => 'Fins',
    'ru_ru' => 'Russisch',
    'ar_ar' => 'Arabisch',
  ];
  return $languages;
}
